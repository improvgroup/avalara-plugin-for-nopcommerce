@model Nop.Plugin.Tax.Avalara.Models.TaxAvalaraModel
@using Nop.Web.Framework;

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-body">
                <p>
                    To enable this tax provider, you'll need to:<br />
                    <br />
                    1. <a href="https://www.avalara.com" target="_blank">Create an Avalara account</a><br />
                    2. Log in at the <a href="https://admin-avatax.avalara.net/login.aspx" target="_blank">production service</a>
                       or at the <a href="https://admin-development.avalara.net/login.aspx target=" _blank"> development service</a><br />
                    3. Add a company and some nexus jurisdiction selections to get any tax results<br />
                    4. Fill in your Avalara account details below<br />
                    <br />
                    <em>
                        Disclaimer: By enabling this plugin you transfer the checkout data of your store to Avalara for accurate tax counting and reporting. The pre-counted tax might vary with tax displayed after checkout.<br />
                    </em>
                </p>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.AccountId)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.AccountId)
                        @Html.ValidationMessageFor(model => model.AccountId)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.LicenseKey)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.LicenseKey)
                        @Html.ValidationMessageFor(model => model.LicenseKey)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.CompanyCode)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.CompanyCode)
                        @Html.ValidationMessageFor(model => model.CompanyCode)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.IsSandboxEnvironment)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.IsSandboxEnvironment)
                        @Html.ValidationMessageFor(model => model.IsSandboxEnvironment)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.CommitTransactions)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.CommitTransactions)
                        @Html.ValidationMessageFor(model => model.CommitTransactions)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.ValidateAddresses)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.ValidateAddresses)
                        @Html.ValidationMessageFor(model => model.ValidateAddresses)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-9 col-md-offset-3">
                        <div class="input-group input-group-short">
                            <div class="input-group-text">
                                <button type="submit" name="save" class="btn btn-primary">
                                    @T("Admin.Common.Save")
                                </button>
                            </div>
                            @if (Model.IsConfigured)
                            {
                                <div class="input-group-btn">
                                    <button type="submit" name="testConnection" class="btn btn-info">
                                        @T("Plugins.Tax.Avalara.TestConnection")
                                    </button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @if (Model.IsConfigured)
        {
            <div class="panel panel-default">

                <script type="text/javascript">
                    $(document).ready(function() {
                        $("#@Html.FieldIdFor(model => model.TestAddress.CountryId)").change(function(){
                            var selectedItem = $(this).val();
                            var ddlStates = $("#@Html.FieldIdFor(model => model.TestAddress.RegionId)");
                            $.ajax({
                                cache: false,
                                type: "GET",
                                url: "@(Url.Action("GetStatesByCountryId"))",
                                data: { "countryId": selectedItem},
                                success: function(data) {
                                    ddlStates.html('');
                                    $.each(data, function(id, option) {
                                        ddlStates.append($('<option></option>').val(option.id).html(option.name));
                                    });
                                },
                                error: function(xhr, ajaxOptions, thrownError) {
                                    alert('Failed to retrieve states.');
                                }
                            });
                        });
                    });
                </script>

                <div class="panel-body">
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.TestAddress.CountryId)
                        </div>
                        <div class="col-md-9">
                            @Html.NopDropDownListFor(model => model.TestAddress.CountryId, Model.TestAddress.AvailableCountries)
                            @Html.ValidationMessageFor(model => model.TestAddress.CountryId)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.TestAddress.RegionId)
                        </div>
                        <div class="col-md-9">
                            @Html.NopDropDownListFor(model => model.TestAddress.RegionId, Model.TestAddress.AvailableStates)
                            @Html.ValidationMessageFor(model => model.TestAddress.RegionId)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.TestAddress.City)
                        </div>
                        <div class="col-md-9">
                            @Html.NopEditorFor(model => model.TestAddress.City)
                            @Html.ValidationMessageFor(model => model.TestAddress.City)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.TestAddress.Address)
                        </div>
                        <div class="col-md-9">
                            @Html.NopEditorFor(model => model.TestAddress.Address)
                            @Html.ValidationMessageFor(model => model.TestAddress.Address)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.TestAddress.ZipPostalCode)
                        </div>
                        <div class="col-md-9">
                            @Html.NopEditorFor(model => model.TestAddress.ZipPostalCode)
                            @Html.ValidationMessageFor(model => model.TestAddress.ZipPostalCode)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-9 col-md-offset-3">
                            <button type="submit" name="testTax" class="btn btn-info">
                                @T("Plugins.Tax.Avalara.TestTax")
                            </button>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12" style="white-space: pre-line">
                            @Html.Raw(Model.TestTaxResult)
                        </div>
                    </div>
                </div>
            </div>
        }
        <div class="panel panel-default">
            <div class="panel-body">
                <p>
                    To use your pre-created tax categories in Avalara backend create the categories with the same names in Avalara Tax cabinet.<br />
                    To have Avalara Tax Codes just create Tax categories with the same name in your nopCommerce backend or use nopCommerce "Import" feature to create codes (you can find a file with all AvaTax tax codes at <a href="https://taxcode.avatax.avalara.com/" target="_blank">https://taxcode.avatax.avalara.com/</a>).<br />
                </p>
                <div class="form-group">
                    <div class="col-md-9 col-md-offset-3">
                        <button type="button" name="importexcel" class="btn bg-olive" data-toggle="modal" data-target="#importexcel-window">
                            <i class="fa fa-upload"></i>
                            @T("Plugins.Tax.Avalara.ImportTaxCodes")
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@*import tax codes form*@
<div id="importexcel-window" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="importexcel-window-title">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="importexcel-window-title">@T("Admin.Common.ImportFromExcel")</h4>
            </div>
            @using (Html.BeginForm("ImportTaxCodes", "TaxAvalara", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-horizontal">
                    <div class="modal-body">
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            <div class="col-md-2">
                                <div class="label-wrapper">
                                    <label class="control-label">
                                        @T("Admin.Common.ExcelFile")
                                    </label>
                                </div>
                            </div>
                            <div class="col-md-10">
                                <input type="file" id="importexcelfile" name="importexcelfile" class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">
                            @T("Admin.Common.ImportFromExcel")
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>