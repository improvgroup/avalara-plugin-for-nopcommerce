@model Nop.Plugin.Tax.Avalara.Models.Tax.TaxCategoryListModel

@inject Nop.Core.Domain.Common.AdminAreaSettings adminAreaSettings
@{
    Layout = "_AdminLayout";

    //page title
    ViewBag.Title = T("Admin.Configuration.Tax.Categories").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Tax categories");

    var defaultGridPageSize = adminAreaSettings.DefaultGridPageSize;
    var gridPageSizes = adminAreaSettings.GridPageSizes;

    var taxCodeTypes = Model.TaxCodeTypes.Select(taxCodeType => new { Id = taxCodeType.Value, Name = taxCodeType.Text }).ToList();
}

<form asp-controller="Tax" asp-action="Categories" method="post">
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.Configuration.Tax.Categories")
        </h1>
        <div class="pull-right">
            &nbsp;
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = "admin_tax_category_list_buttons" })
        </div>
    </div>

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div id="tax-categories-grid"></div>

                        <script type="text/javascript">
                            $(document).ready(function() {
                                $("#tax-categories-grid").kendoGrid({
                                    dataSource: {
                                        type: "json",
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("Categories"))",
                                                type: "POST",
                                                dataType: "json",
                                                data: addAntiForgeryToken
                                            },
                                            create: {
                                                url: "@Html.Raw(Url.Action("TaxCategoryAdd"))",
                                                type: "POST",
                                                dataType: "json",
                                                data: addAntiForgeryToken
                                            },
                                            update: {
                                                url: "@Html.Raw(Url.Action("TaxCategoryUpdate"))",
                                                type: "POST",
                                                dataType: "json",
                                                data: addAntiForgeryToken
                                            },
                                            destroy: {
                                                url: "@Html.Raw(Url.Action("CategoryDelete"))",
                                                type: "POST",
                                                dataType: "json",
                                                data: addAntiForgeryToken
                                            }
                                        },
                                        schema: {
                                            data: "Data",
                                            total: "Total",
                                            errors: "Errors",
                                            model: {
                                                id: "Id",
                                                fields: {
                                                    Name: { editable: true, type: "string" },
                                                    Type: { editable: true, type: "string" },
                                                    TypeId: { editable: true, type: "string" },
                                                    Description: { editable: false, type: "string" },
                                                    DisplayOrder: { editable: true, type: "number" },
                                                    Id: { editable: false, type: "number" }
                                                }
                                            }
                                        },
                                        requestEnd: function(e) {
                                            if (e.type == "create" || e.type == "update") {
                                                this.read();
                                            }
                                        },
                                        error: function(e) {
                                            display_kendoui_grid_error(e);
                                            // Cancel the changes
                                            this.cancelChanges();
                                        },
                                        pageSize: @(defaultGridPageSize),
                                        serverPaging: true,
                                        serverFiltering: true,
                                        serverSorting: true
                                    },
                                    pageable: {
                                        refresh: true,
                                        pageSizes: [@(gridPageSizes)],
                                        @await Html.PartialAsync("_GridPagerMessages")
                                    },
                                    toolbar: [{ name: "create", text: "@T("Admin.Common.AddNewRecord")" }],
                                    editable: {
                                        confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                        mode: "inline"
                                    },
                                    scrollable: false,
                                    columns: [
                                    {
                                        field: "Name",
                                        title: "@T("Admin.Configuration.Tax.Categories.Fields.Name")",
                                        width: 200
                                    }, {
                                        field: "TypeId",
                                        title: "@T("Plugins.Tax.Avalara.Fields.TaxCodeType")",
                                        width: 100,
                                        editor: typeDropDownEditor,
                                        template: "#:Type#"
                                    }, {
                                        field: "Description",
                                        title: "@T("Plugins.Tax.Avalara.Fields.TaxCodeDescription")"
                                    }, {
                                        field: "DisplayOrder",
                                        title: "@T("Admin.Configuration.Tax.Categories.Fields.DisplayOrder")",
                                        //integer format
                                        format: "{0:0}",
                                        width: 100
                                    }, {
                                        command: [
                                        {
                                            name: "edit",
                                            text: {
                                                edit: "@T("Admin.Common.Edit")",
                                                update: "@T("Admin.Common.Update")",
                                                cancel: "@T("Admin.Common.Cancel")"
                                            }
                                        }, {
                                            name: "destroy",
                                            text: "@T("Admin.Common.Delete")"
                                                }
                                            ],
                                            width: 200
                                        }
                                    ]
                                });
                            });
                            
                            function typeDropDownEditor(container, options) {
                                $('<input required data-text-field="Name" data-value-field="Id" data-bind="value:TypeId"/>')
                                    .appendTo(container)
                                    .kendoDropDownList({
                                        autoBind: false,
                                        dataSource: @Html.Raw(Json.Serialize(taxCodeTypes))
                                    });
                            }
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>